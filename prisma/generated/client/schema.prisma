// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider      = "prisma-client-js"
  output        = "./generated/client"
  binaryTargets = ["native", "linux-arm64-openssl-3.0.x", "debian-openssl-3.0.x", "debian-openssl-1.1.x", "linux-musl", "linux-musl-openssl-3.0.x"]
}

generator dbml {
  provider = "prisma-dbml-generator"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Book {
  id          Int         @id @unique @default(autoincrement())
  title       String
  authorId    Int
  publisherId Int
  year        Int
  author      Author      @relation(fields: [authorId], references: [id])
  publisher   Publisher   @relation(fields: [publisherId], references: [id])
  genres      BookGenre[]
  loans       Loan[]
}

model Author {
  id        Int       @id @default(autoincrement())
  firstName String
  lastName  String
  birthDate DateTime?
  country   String
  books     Book[]
}

model Reader {
  id               Int      @id @default(autoincrement())
  firstName        String
  lastName         String
  address          String
  phone            String
  registrationDate DateTime @default(now())
  loans            Loan[]
}

enum LoanStatus {
  ISSUED
  NOT_ISSUED
}

model Loan {
  id         Int        @id @default(autoincrement())
  readerId   Int
  bookId     Int
  issueDate  DateTime
  returnDate DateTime?
  status     LoanStatus
  reader     Reader     @relation(fields: [readerId], references: [id])
  book       Book       @relation(fields: [bookId], references: [id])
}

model Genre {
  id    Int         @id @default(autoincrement())
  name  String      @unique
  books BookGenre[]
}

model BookGenre {
  bookId  Int
  genreId Int
  book    Book  @relation(fields: [bookId], references: [id])
  genre   Genre @relation(fields: [genreId], references: [id])

  @@id([bookId, genreId])
}

model Publisher {
  id      Int    @id @default(autoincrement())
  name    String
  address String
  phone   String
  books   Book[]
}
